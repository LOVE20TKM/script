{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094ef00c86047c49c19ebfafcb4a4c041000bd0b9303df58c7dc90ed41958afd364736f6c63430008130033","sourceMap":"395:10411:66:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;395:10411:66;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094ef00c86047c49c19ebfafcb4a4c041000bd0b9303df58c7dc90ed41958afd364736f6c63430008130033","sourceMap":"395:10411:66:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"A Solidity implementation of Fenwick Tree (Binary Indexed Tree) Provides efficient operations for: - Updating a single element in O(log n) time - Calculating prefix sum in O(log n) time - Random selection based on weights in O(log n) time\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FenwickTree\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/FenwickTree.sol\":\"FenwickTree\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"src/lib/FenwickTree.sol\":{\"keccak256\":\"0x91b1e55bec5d2427b98732caed415e497a70b68acd0f961c6a740ab635ed5ca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aacaddd8012f89d913821bbc3db939ce833f5856f95f2ec8ba86c5546c200449\",\"dweb:/ipfs/QmaE6nmBZvnTkZ1KPrtGPimSVcf6sdg4FoSorENr2krovd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/lib/FenwickTree.sol":"FenwickTree"},"evmVersion":"paris","libraries":{}},"sources":{"lib/forge-std/src/console.sol":{"keccak256":"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba","urls":["bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70","dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"],"license":"MIT"},"src/lib/FenwickTree.sol":{"keccak256":"0x91b1e55bec5d2427b98732caed415e497a70b68acd0f961c6a740ab635ed5ca2","urls":["bzz-raw://aacaddd8012f89d913821bbc3db939ce833f5856f95f2ec8ba86c5546c200449","dweb:/ipfs/QmaE6nmBZvnTkZ1KPrtGPimSVcf6sdg4FoSorENr2krovd"],"license":"MIT"}},"version":1},"id":66}